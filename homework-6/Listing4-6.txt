LISTING4-6.txt

$ make ARCH=arm help
Cleaning targets:
Clean
 - Remove most generated files but keep the config andenough build support to build external modulesmrproper 
 - Remove all generated files + config + various backup files distclean
 - mrproper + remove editor backup and patch files
Configuration targets:
Config
 - Update current config utilising a line-oriented program
Menuconfig
 - Update current config utilising a menu based program
Xconfig
 - Update current config utilising a QT based front-end
Gconfig
 - Update current config utilising a GTK based front-end
Oldconfig
 - Update current config utilising a provided .config as base
silentoldconfig - Same as oldconfig, but quietlyrandconfig
 - New config with random answer to all optionsdefconfig
 - New config with default answer to all optionsallmodconfig
 - New config selecting modules when possibleallyesconfig
 - New config where all options are accepted with yesallnoconfig
 - New config where all options are answered with no
Other generic targets:
All
 - Build all targets marked with [*]
* vmlinux
 - Build the bare kernel
* modules
 - Build all modules modules_install 
 - Install all modules to INSTALL_MOD_PATH (default: /) firmware_install
 - Install all firmware to INSTALL_FW_PATH (default: $(INSTALL_MOD_PATH)/lib/firmware) dir/
 - Build all files in dir and below dir/file.[ois] 
 - Build specified target only dir/file.ko
 - Build module including final link modules_prepare 
 - Set up for building external modules
tags/TAGS
 - Generate tags file for editors
cscope
 - Generate cscope index
kernelrelease - Output the release version string
kernelversion - Output the version stored in Makefile
headers_install - Install sanitised kernel headers to INSTALL_HDR_PATH
(default: /home/chris/temp/linux-2.6/usr)
Static analysers
checkstack
 - Generate a list of stack hogs
namespacecheck
 - Name space analysis on compiled kernel
versioncheck
 - Sanity check on version.h usage
includecheck
 - Check for duplicate included header files
export_report
 - List the usages of all exported symbols
headers_check
 - Sanity check on exported headers
headerdep
 - Detect inclusion cycles in headers

Kernel packaging:
  rpm-pkg
   - Build both source and binary RPM kernel packages
  binrpm-pkg - Build only the binary kernel packagedeb-pkg
   - Build the kernel as an deb package
  tar-pkg - Build the kernel as an uncompressed tarball
  targz-pkg - Build the kernel as a gzip compressed tarball
  tarbz2-pkg - Build the kernel as a bzip2 compressed tarball

Documentation targets:
Linux kernel internal documentation in different formats:
htmldocs - HTML
pdfdocs - PDF
psdocs - Postscript
xmldocs - XML DocBook
mandocs - man pages
installmandocs - install man pages generated by mandocs
cleandocs - clean all generated DocBook files

Architecture specific targets (arm):
* zImage - Compressed kernel image (arch/arm/boot/zImage)
Image - Uncompressed kernel image (arch/arm/boot/Image)
* xipImage - XIP kernel image, if configured (arch/arm/boot/xipImage)
uImage - U-Boot wrapped zImage
bootpImage - Combined zImage and initial RAM disk(supply initrd image via make variable INITRD=<path>)
install - Install uncompressed kernel
zinstall - Install compressed kernel
Install using (your) ~/bin/installkernel or(distribution) /sbin/installkernel or install to $(INSTALL_PATH) and run lilo
acs5k_defconfig - Build for acs5k
acs5k_tiny_defconfig - Build for acs5k_tiny
afeb9260_defconfig - Build for afeb9260
am200epdkit_defconfig - Build for am200epdkit
ams_delta_defconfig - Build for ams_delta
assabet_defconfig - Build for assabet
at91cap9adk_defconfig - Build for at91cap9adk
at91rm9200dk_defconfig - Build for at91rm9200dk
at91rm9200ek_defconfig - Build for at91rm9200ek
at91sam9260ek_defconfig - Build for at91sam9260ek
at91sam9261ek_defconfig - Build for at91sam9261ek
at91sam9263ek_defconfig - Build for at91sam9263ek
at91sam9g20ek_defconfig - Build for at91sam9g20ek
at91sam9rlek_defconfig - Build for at91sam9rlek
ateb9200_defconfig - Build for ateb9200
badge4_defconfig - Build for badge4
cam60_defconfig - Build for cam60
carmeva_defconfig - Build for carmeva
cerfcube_defconfig - Build for cerfcube
cm_x2xx_defconfig - Build for cm_x2xx
cm_x300_defconfig - Build for cm_x300
colibri_pxa270_defconfig - Build for colibri_pxa270
colibri_pxa300_defconfig - Build for colibri_pxa300
collie_defconfig - Build for collie
corgi_defconfig - Build for corgi
csb337_defconfig - Build for csb337
csb637_defconfig - Build for csb637
davinci_all_defconfig - Build for davinci_all
ebsa110_defconfig - Build for ebsa110
ecbat91_defconfig - Build for ecbat91
edb7211_defconfig - Build for edb7211
em_x270_defconfig - Build for em_x270
ep93xx_defconfig - Build for ep93xx
eseries_pxa_defconfig - Build for eseries_pxa
ezx_defconfig - Build for ezx
footbridge_defconfig - Build for footbridge
fortunet_defconfig - Build for fortunet
h3600_defconfig - Build for h3600
h5000_defconfig - Build for h5000
h7201_defconfig - Build for h7201
h7202_defconfig - Build for h7202
hackkit_defconfig - Build for hackkit
integrator_defconfig - Build for integrator
iop13xx_defconfig - Build for iop13xx
iop32x_defconfig - Build for iop32x
iop33x_defconfig - Build for iop33x
ixp2000_defconfig - Build for ixp2000
ixp23xx_defconfig - Build for ixp23xx
omap_ldp_defconfig - Build for omap_ldp
omap_osk_5912_defconfig - Build for omap_osk_5912
omap_perseus2_730_defconfig - Build for omap_perseus2_730
onearm_defconfig - Build for onearm
orion5x_defconfig - Build for orion5x
overo_defconfig - Build for overo
palmte_defconfig - Build for palmte
palmtt_defconfig - Build for palmtt
palmz71_defconfig - Build for palmz71
palmz72_defconfig - Build for palmz72
pcm027_defconfig - Build for pcm027
picotux200_defconfig - Build for picotux200
pleb_defconfig - Build for pleb
pnx4008_defconfig - Build for pnx4008
pxa168_defconfig - Build for pxa168
pxa255-idp_defconfig - Build for pxa255-idp
pxa910_defconfig - Build for pxa910
qil-a9260_defconfig - Build for qil-a9260
realview_defconfig - Build for realview
realview-smp_defconfig - Build for realview-smp
rpc_defconfig - Build for rpc
rx51_defconfig - Build for rx51
s3c2410_defconfig - Build for s3c2410
s3c6400_defconfig - Build for s3c6400
sam9_l9260_defconfig - Build for sam9_l9260
shannon_defconfig - Build for shannon
shark_defconfig - Build for shark
simpad_defconfig - Build for simpad
spitz_defconfig - Build for spitz
sx1_defconfig - Build for sx1
tct_hammer_defconfig - Build for tct_hammer
trizeps4_defconfig - Build for trizeps4
usb-a9260_defconfig - Build for usb-a9260
usb-a9263_defconfig - Build for usb-a9263
versatile_defconfig - Build for versatile
viper_defconfig - Build for viper
w90p910_defconfig - Build for w90p910
yl9200_defconfig - Build for yl9200
zylonite_defconfig - Build for zylonite

make V=0|1 [targets] 0 => quiet build (default), 1 => verbose build
make V=2 [targets] 2 => give reason for rebuild of target
make O=dir [targets] Locate all output files in “dir”, including .config
make C=1 [targets] Check all c source with $CHECK (sparse by default)
make C=2 [targets] Force check of all c source with $CHECK

Execute “make” or “make all” to build all targets marked with [*]For further info see the ./README file

=====================================================================

daruwakj KERNEL [v3.8.13-bone67|C] $ make ARCH=arm help
Cleaning targets:
  clean		  - Remove most generated files but keep the config and
                    enough build support to build external modules
  mrproper	  - Remove all generated files + config + various backup files
  distclean	  - mrproper + remove editor backup and patch files

Configuration targets:
  config	  - Update current config utilising a line-oriented program
  nconfig         - Update current config utilising a ncurses menu based program
  menuconfig	  - Update current config utilising a menu based program
  xconfig	  - Update current config utilising a QT based front-end
  gconfig	  - Update current config utilising a GTK based front-end
  oldconfig	  - Update current config utilising a provided .config as base
  localmodconfig  - Update current config disabling modules not loaded
  localyesconfig  - Update current config converting local mods to core
  silentoldconfig - Same as oldconfig, but quietly, additionally update deps
  defconfig	  - New config with default from ARCH supplied defconfig
  savedefconfig   - Save current config as ./defconfig (minimal config)
  allnoconfig	  - New config where all options are answered with no
  allyesconfig	  - New config where all options are accepted with yes
  allmodconfig	  - New config selecting modules when possible
  alldefconfig    - New config with all symbols set to default
  randconfig	  - New config with random answer to all options
  listnewconfig   - List new options
  olddefconfig	  - Same as silentoldconfig but sets new symbols to their default value

Other generic targets:
  all		  - Build all targets marked with [*]
* vmlinux	  - Build the bare kernel
* modules	  - Build all modules
  modules_install - Install all modules to INSTALL_MOD_PATH (default: /)
  firmware_install- Install all firmware to INSTALL_FW_PATH
                    (default: $(INSTALL_MOD_PATH)/lib/firmware)
  dir/            - Build all files in dir and below
  dir/file.[oisS] - Build specified target only
  dir/file.lst    - Build specified mixed source/assembly target only
                    (requires a recent binutils and recent build (System.map))
  dir/file.ko     - Build module including final link
  modules_prepare - Set up for building external modules
  tags/TAGS	  - Generate tags file for editors
  cscope	  - Generate cscope index
  gtags           - Generate GNU GLOBAL index
  kernelrelease	  - Output the release version string
  kernelversion	  - Output the version stored in Makefile
  headers_install - Install sanitised kernel headers to INSTALL_HDR_PATH
                    (default: /mnt/fuck/Users/Kyle/Documents/Courses/Embedded32-BitLinux/bb-kernel/KERNEL/usr)

Static analysers
  checkstack      - Generate a list of stack hogs
  namespacecheck  - Name space analysis on compiled kernel
  versioncheck    - Sanity check on version.h usage
  includecheck    - Check for duplicate included header files
  export_report   - List the usages of all exported symbols
  headers_check   - Sanity check on exported headers
  headerdep       - Detect inclusion cycles in headers
  coccicheck      - Check with Coccinelle.

Kernel packaging:
  rpm-pkg             - Build both source and binary RPM kernel packages
  binrpm-pkg          - Build only the binary kernel package
  deb-pkg             - Build the kernel as a deb package
  tar-pkg             - Build the kernel as an uncompressed tarball
  targz-pkg           - Build the kernel as a gzip compressed tarball
  tarbz2-pkg          - Build the kernel as a bzip2 compressed tarball
  tarxz-pkg           - Build the kernel as a xz compressed tarball
  perf-tar-src-pkg    - Build perf-3.8.13.tar source tarball
  perf-targz-src-pkg  - Build perf-3.8.13.tar.gz source tarball
  perf-tarbz2-src-pkg - Build perf-3.8.13.tar.bz2 source tarball
  perf-tarxz-src-pkg  - Build perf-3.8.13.tar.xz source tarball

Documentation targets:
 Linux kernel internal documentation in different formats:
  htmldocs        - HTML
  pdfdocs         - PDF
  psdocs          - Postscript
  xmldocs         - XML DocBook
  mandocs         - man pages
  installmandocs  - install man pages generated by mandocs
  cleandocs       - clean all generated DocBook files

Architecture specific targets (arm):
* zImage        - Compressed kernel image (arch/arm/boot/zImage)
  Image         - Uncompressed kernel image (arch/arm/boot/Image)
* xipImage      - XIP kernel image, if configured (arch/arm/boot/xipImage)
  uImage        - U-Boot wrapped zImage
  bootpImage    - Combined zImage and initial RAM disk
                  (supply initrd image via make variable INITRD=<path>)
* dtbs          - Build device tree blobs for enabled boards
  install       - Install uncompressed kernel
  zinstall      - Install compressed kernel
  uinstall      - Install U-Boot wrapped compressed kernel
                  Install using (your) ~/bin/installkernel or
                  (distribution) /sbin/installkernel or
                  install to $(INSTALL_PATH) and run lilo

  neponset_defconfig       - Build for neponset
  ep93xx_defconfig         - Build for ep93xx
  spear6xx_defconfig       - Build for spear6xx
  ag5evm_defconfig         - Build for ag5evm
  at91sam9g20_defconfig    - Build for at91sam9g20
  clps711x_defconfig       - Build for clps711x
  mainstone_defconfig      - Build for mainstone
  mini2440_defconfig       - Build for mini2440
  davinci_all_defconfig    - Build for davinci_all
  at91sam9261_defconfig    - Build for at91sam9261
  lpd270_defconfig         - Build for lpd270
  nuc910_defconfig         - Build for nuc910
  mmp2_defconfig           - Build for mmp2
  integrator_defconfig     - Build for integrator
  vexpress_defconfig       - Build for vexpress
  tegra_defconfig          - Build for tegra
  trizeps4_defconfig       - Build for trizeps4
  cm_x300_defconfig        - Build for cm_x300
  mvebu_defconfig          - Build for mvebu
  multi_v7_defconfig       - Build for multi_v7
  prima2_defconfig         - Build for prima2
  omap1_defconfig          - Build for omap1
  cerfcube_defconfig       - Build for cerfcube
  em_x270_defconfig        - Build for em_x270
  mackerel_defconfig       - Build for mackerel
  pleb_defconfig           - Build for pleb
  cns3420vb_defconfig      - Build for cns3420vb
  collie_defconfig         - Build for collie
  netx_defconfig           - Build for netx
  u300_defconfig           - Build for u300
  spitz_defconfig          - Build for spitz
  at91sam9263_defconfig    - Build for at91sam9263
  msm_defconfig            - Build for msm
  s5pv210_defconfig        - Build for s5pv210
  imx_v6_v7_defconfig      - Build for imx_v6_v7
  jornada720_defconfig     - Build for jornada720
  at91sam9rl_defconfig     - Build for at91sam9rl
  imote2_defconfig         - Build for imote2
  nhk8815_defconfig        - Build for nhk8815
  ap4evb_defconfig         - Build for ap4evb
  pxa3xx_defconfig         - Build for pxa3xx
  am200epdkit_defconfig    - Build for am200epdkit
  pxa168_defconfig         - Build for pxa168
  colibri_pxa300_defconfig - Build for colibri_pxa300
  arduino-tre_defconfig    - Build for arduino-tre
  bcm2835_defconfig        - Build for bcm2835
  kirkwood_defconfig       - Build for kirkwood
  cm_x2xx_defconfig        - Build for cm_x2xx
  ebsa110_defconfig        - Build for ebsa110
  nuc960_defconfig         - Build for nuc960
  colibri_pxa270_defconfig - Build for colibri_pxa270
  at91x40_defconfig        - Build for at91x40
  iop13xx_defconfig        - Build for iop13xx
  tct_hammer_defconfig     - Build for tct_hammer
  dove_defconfig           - Build for dove
  shannon_defconfig        - Build for shannon
  h7202_defconfig          - Build for h7202
  s5pc100_defconfig        - Build for s5pc100
  da8xx_omapl_defconfig    - Build for da8xx_omapl
  raumfeld_defconfig       - Build for raumfeld
  mxs_defconfig            - Build for mxs
  nuc950_defconfig         - Build for nuc950
  palmz72_defconfig        - Build for palmz72
  iop32x_defconfig         - Build for iop32x
  mv78xx0_defconfig        - Build for mv78xx0
  rpc_defconfig            - Build for rpc
  s3c6400_defconfig        - Build for s3c6400
  eseries_pxa_defconfig    - Build for eseries_pxa
  at91_dt_defconfig        - Build for at91_dt
  pcm027_defconfig         - Build for pcm027
  pxa910_defconfig         - Build for pxa910
  realview_defconfig       - Build for realview
  exynos4_defconfig        - Build for exynos4
  footbridge_defconfig     - Build for footbridge
  ks8695_defconfig         - Build for ks8695
  imx_v4_v5_defconfig      - Build for imx_v4_v5
  armadillo800eva_defconfig - Build for armadillo800eva
  marzen_defconfig         - Build for marzen
  lpc32xx_defconfig        - Build for lpc32xx
  assabet_defconfig        - Build for assabet
  corgi_defconfig          - Build for corgi
  h5000_defconfig          - Build for h5000
  lubbock_defconfig        - Build for lubbock
  kzm9d_defconfig          - Build for kzm9d
  bonito_defconfig         - Build for bonito
  at91rm9200_defconfig     - Build for at91rm9200
  at91sam9260_defconfig    - Build for at91sam9260
  netwinder_defconfig      - Build for netwinder
  zeus_defconfig           - Build for zeus
  iop33x_defconfig         - Build for iop33x
  xcep_defconfig           - Build for xcep
  kzm9g_defconfig          - Build for kzm9g
  realview-smp_defconfig   - Build for realview-smp
  orion5x_defconfig        - Build for orion5x
  acs5k_defconfig          - Build for acs5k
  ixp4xx_defconfig         - Build for ixp4xx
  viper_defconfig          - Build for viper
  s3c2410_defconfig        - Build for s3c2410
  magician_defconfig       - Build for magician
  acs5k_tiny_defconfig     - Build for acs5k_tiny
  h7201_defconfig          - Build for h7201
  s5p64x0_defconfig        - Build for s5p64x0
  socfpga_defconfig        - Build for socfpga
  hackkit_defconfig        - Build for hackkit
  h3600_defconfig          - Build for h3600
  u8500_defconfig          - Build for u8500
  ezx_defconfig            - Build for ezx
  at91sam9g45_defconfig    - Build for at91sam9g45
  simpad_defconfig         - Build for simpad
  kota2_defconfig          - Build for kota2
  badge4_defconfig         - Build for badge4
  versatile_defconfig      - Build for versatile
  exynos_defconfig         - Build for exynos
  spear13xx_defconfig      - Build for spear13xx
  omap2plus_defconfig      - Build for omap2plus
  shark_defconfig          - Build for shark
  bcm_defconfig            - Build for bcm
  spear3xx_defconfig       - Build for spear3xx
  lart_defconfig           - Build for lart
  pxa255-idp_defconfig     - Build for pxa255-idp

  make V=0|1 [targets] 0 => quiet build (default), 1 => verbose build
  make V=2   [targets] 2 => give reason for rebuild of target
  make O=dir [targets] Locate all output files in "dir", including .config
  make C=1   [targets] Check all c source with $CHECK (sparse by default)
  make C=2   [targets] Force check of all c source with $CHECK
  make RECORDMCOUNT_WARN=1 [targets] Warn about ignored mcount sections
  make W=n   [targets] Enable extra gcc checks, n=1,2,3 where
		1: warnings which may be relevant and do not occur too often
		2: warnings which occur quite often but may still be relevant
		3: more obscure warnings, can most likely be ignored
		Multiple levels can be combined with W=12 or W=123

Execute "make" or "make all" to build all targets marked with [*] 
For further info see the ./README file

=====================================================================

These two outputs are almost identical. This is because building for a standard Linux kernel for an ARM processor is a standard process. Yes, the C files may be different, but building them is the same.